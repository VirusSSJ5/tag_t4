#ifndef GASTOHPP
#define GASTOHPP

#include "common.hpp"

struct gastoIndividual{

	//////////////////////////////////////////////////////////////////////////
	///	Variáveis referentes às colunas da planilha:
	///	refund_description,refund_date,refund_value	
	//////////////////////////////////////////////////////////////////////////
	string descricao;
	string data;
	double valor;

	//////////////////////////////////////////////////////////////////////////
	///		@param &des Descrição do gasto
	///		@param &date Data do gasto
	///		@param &val Valor do gasto
	///		@brief Construtor
	///		
	///		Construtor da estrutura do gasto. Já atribui os parâmetros lidos às variáveis
	//////////////////////////////////////////////////////////////////////////
	gastoIndividual(const string &des,const string &date,const double &val);
};

class gasto{
public:
	//////////////////////////////////////////////////////////////////////////
	///	Valor total de todos os gastos com uma empresa
	//////////////////////////////////////////////////////////////////////////
	double valorTotal;

	//////////////////////////////////////////////////////////////////////////
	///	Vetor com todos os gastos separados pela data e valor (individuais)
	//////////////////////////////////////////////////////////////////////////
	vector<gastoIndividual> gastos;

	//////////////////////////////////////////////////////////////////////////
	///		@param &gi Gasto a ser adicionado
	///		@brief Adiciona um gasto novo
	///		
	///		Acrescenta um gasto no vetor de gastos individuais
	//////////////////////////////////////////////////////////////////////////
	void operator+=(const gastoIndividual &gi);
};

//////////////////////////////////////////////////////////////////////////
///		@param os Saída
///		@param g Gasto a ser imprimido
///		@brief Imprime um gasto
///
///		Imprime o gasto recebido na saída recebida
//////////////////////////////////////////////////////////////////////////
std::ostream& operator<<(std::ostream& os,const gasto& g);

#endif//GASTOHPP
